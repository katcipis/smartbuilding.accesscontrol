// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `BookQueryResultPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Demo;

/**
 * Interface to get query results.
 * 
 **/
public interface BookQueryResultPrx extends Ice.ObjectPrx
{
    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @param destroyed There are no more results, and the query has
     * been destroyed.
     * 
     * @returns A sequence of up to n results.
     * 
     **/
    public java.util.List<BookDescription> next(int n, Ice.BooleanHolder destroyed);

    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @param destroyed There are no more results, and the query has
     * been destroyed.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @returns A sequence of up to n results.
     * 
     **/
    public java.util.List<BookDescription> next(int n, Ice.BooleanHolder destroyed, java.util.Map<String, String> __ctx);

    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_next(int n);

    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_next(int n, java.util.Map<String, String> __ctx);

    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_next(int n, Ice.Callback __cb);

    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_next(int n, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_next(int n, Callback_BookQueryResult_next __cb);

    /**
     * Get more query results.
     * 
     * @param n The maximum number of results to return.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_next(int n, java.util.Map<String, String> __ctx, Callback_BookQueryResult_next __cb);

    /**
     * Get more query results.
     * 
     * @param destroyed There are no more results, and the query has
     * been destroyed.
     * 
     * @param __result The asynchronous result object.
     * @returns A sequence of up to n results.
     * 
     **/
    public java.util.List<BookDescription> end_next(Ice.BooleanHolder destroyed, Ice.AsyncResult __result);

    /**
     * Destroy the query result.
     * 
     **/
    public void destroy();

    /**
     * Destroy the query result.
     * 
     * @param __ctx The Context map to send with the invocation.
     **/
    public void destroy(java.util.Map<String, String> __ctx);

    /**
     * Destroy the query result.
     * 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy();

    /**
     * Destroy the query result.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(java.util.Map<String, String> __ctx);

    /**
     * Destroy the query result.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(Ice.Callback __cb);

    /**
     * Destroy the query result.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * Destroy the query result.
     * 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(Callback_BookQueryResult_destroy __cb);

    /**
     * Destroy the query result.
     * 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_destroy(java.util.Map<String, String> __ctx, Callback_BookQueryResult_destroy __cb);

    /**
     * Destroy the query result.
     * 
     * @param __result The asynchronous result object.
     **/
    public void end_destroy(Ice.AsyncResult __result);
}
